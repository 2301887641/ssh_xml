<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--读取jdbc.properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--包扫描-->
    <context:component-scan base-package="com.time">
        <!--扫描时跳过 @Controller 注解的JAVA类（控制器）-->
        <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <!--配置druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <!--<property name="initialSize" value="${datasource.initialSize}" />-->
        <!--<property name="minIdle" value="${datasource.minIdle}" />-->
        <!--<property name="maxActive" value="${datasource.maxActive}" />-->
         <!--配置获取连接等待超时的时间-->
        <!--<property name="maxWait" value="${datasource.maxWait}" />-->
         <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${datasource.timeBetweenEvictionRunsMillis}" />-->
         <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <!--<property name="minEvictableIdleTimeMillis" value="${datasource.minEvictableIdleTimeMillis}" />-->
        <!--<property name="validationQuery" value="${datasource.validationQuery}" />-->
        <!--<property name="testWhileIdle" value="${datasource.testWhileIdle}" />-->
        <!--<property name="testOnBorrow" value="${datasource.testOnBorrow}" />-->
        <!--<property name="testOnReturn" value="${datasource.testOnReturn}" />-->
        <!--打开PSCache，并且指定每个连接上PSCache的大小-->
        <!--<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements}" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="${datasource.maxPoolPreparedStatementPerConnectionSize}" />-->
         <!--配置监控统计拦截的filters-->
        <!--<property name="filters" value="${datasource.filters}" />-->
        <!--通过connectProperties属性来打开mergeSql功能；慢SQL记录-->
        <!--<property name="connectionProperties" value="${datasource.connectionProperties}" />-->
        <!--合并多个DruidDataSource的监控数据-->
        <!-- 配置监控统计拦截的filters -->
        <!--<property name="useGlobalDataSourceStat" value="${datasource.useGlobalDataSourceStat}" />-->
    </bean>

    <!--配置hibernate sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置hibernate相关属性-->
        <property name="hibernateProperties">
            <props>
                <!-- 设置方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hbm2ddl.auto">update</prop>
                <!--设置编码方式为utf-8-->
                <prop key="hibernate.connection.characterEncoding">utf-8</prop>
                <!--打印sql-->
                <prop key="show_sql">true</prop>
                <!-- 格式化sql -->
                <prop key="format_sql">true</prop>
            </props>
        </property>
        <!--设置映射文件-->
        <property name="mappingResources">
            <list>
                <value>hbm/User.hbm.xml</value>
            </list>
        </property>
    </bean>
</beans>